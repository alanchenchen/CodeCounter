// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
const go = {
  "main": {
    "App": {
      /**
       * Extname
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<string>}  - Go Type: string
       */
      "Extname": (arg1) => {
        return window.go.main.App.Extname(arg1);
      },
      /**
       * OpenDirectoryDialog
       * @param {OpenDialogOptions} arg1 - Go Type: frontend.OpenDialogOptions
       * @returns {Promise<string|Error>}  - Go Type: string
       */
      "OpenDirectoryDialog": (arg1) => {
        return window.go.main.App.OpenDirectoryDialog(arg1);
      },
      /**
       * Quit
       * @returns {Promise<void>} 
       */
      "Quit": () => {
        return window.go.main.App.Quit();
      },
      /**
       * ReadCodeLinesByDirFiles
       * @param {string} arg1 - Go Type: string
       * @param {Array<string>} arg2 - Go Type: []string
       * @param {CustomCommentRules} arg3 - Go Type: main.CustomCommentRules
       * @returns {Promise<Array<FileCodeCounter>|Error>}  - Go Type: []count.FileCodeCounter
       */
      "ReadCodeLinesByDirFiles": (arg1, arg2, arg3) => {
        return window.go.main.App.ReadCodeLinesByDirFiles(arg1, arg2, arg3);
      },
      /**
       * SaveFileDialog
       * @param {SaveDialogOptions} arg1 - Go Type: frontend.SaveDialogOptions
       * @returns {Promise<string|Error>}  - Go Type: string
       */
      "SaveFileDialog": (arg1) => {
        return window.go.main.App.SaveFileDialog(arg1);
      },
      /**
       * WriteFile
       * @param {string} arg1 - Go Type: string
       * @param {string} arg2 - Go Type: string
       * @returns {Promise<Error>}  - Go Type: error
       */
      "WriteFile": (arg1, arg2) => {
        return window.go.main.App.WriteFile(arg1, arg2);
      },
    },
  },

};
export default go;
